// definition of the nred syntax, the endpoint configuration language of Netreduce (https://www.netreduce.org)
nred:root = definitions | single-expression;

space:ws    = [ \b\f\r\t\v];
nl:alias    = "\n";
nls:alias   = nl*;
colon:alias = ";";
dot:alias   = ".";
comma:alias = ",";
opteq:alias = "="?;

line-comment:alias:nows  = "//" [^\n]*;
block-comment:alias:nows = "/*" ([^*] | "*" [^/])* "*/";
comment:ws               = line-comment | block-comment;

decimal-digit:alias = [0-9];
octal-digit:alias   = [0-7];
hexa-digit:alias    = [0-9a-fA-F];

decimal:alias:nows = [1-9] decimal-digit*;
octal:alias:nows   = "0" octal-digit+;
hexa:alias:nows    = "0" [xX] hexa-digit+;
int                = decimal | octal | hexa;

exponent:alias:nows = [eE] [+\-]? decimal-digit+;
float:nows          = decimal-digit+ "." decimal-digit* exponent?
                    | "." decimal-digit+ exponent?
                    | decimal-digit+ exponent;

string:nows = "\"" ([^\\"] | "\\" .)* "\"";

symbol-tag:nows:alias = [a-zA-Z_][a-zA-Z_0-9]*;
symbol:nows = symbol-tag (nls dot nls symbol-tag)*;

primitive-expression:alias = int | float | string | symbol;
composite-expression       = expression
                             nls "(" (nl | comma)*
	                    (expression
	                     ((nl | comma)+ expression)*
	                     (nl | comma)*)?
	                    ")";

expression:alias  = primitive-expression | composite-expression;
single-expression = expression;
local             = "let" nls symbol nls opteq nls expression;
export            = "export" nls string nls opteq nls expression;
definitions:alias = (nl | colon)* ((local | export) (nl | colon)*)*;
